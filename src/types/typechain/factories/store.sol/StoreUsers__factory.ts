/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StoreUsers,
  StoreUsersInterface,
} from "../../store.sol/StoreUsers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_salt",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyStored",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ReputationDoesntAllow",
    type: "error",
  },
  {
    inputs: [],
    name: "RespectableUser",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "BadActorPunished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UserStored",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "convictABadActor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adr",
        type: "address",
      },
    ],
    name: "destroyReputation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getKey",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReputation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_identity",
        type: "string",
      },
    ],
    name: "storeUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "identity",
        type: "string",
      },
      {
        internalType: "enum storeUsers.Reputation",
        name: "reputation",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "dealCounter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200191b3803806200191b833981810160405281019062000037919062000223565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060019081620000889190620004bf565b5050620005a6565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000f982620000ae565b810181811067ffffffffffffffff821117156200011b576200011a620000bf565b5b80604052505050565b60006200013062000090565b90506200013e8282620000ee565b919050565b600067ffffffffffffffff821115620001615762000160620000bf565b5b6200016c82620000ae565b9050602081019050919050565b60005b83811015620001995780820151818401526020810190506200017c565b60008484015250505050565b6000620001bc620001b68462000143565b62000124565b905082815260208101848484011115620001db57620001da620000a9565b5b620001e884828562000179565b509392505050565b600082601f830112620002085762000207620000a4565b5b81516200021a848260208601620001a5565b91505092915050565b6000602082840312156200023c576200023b6200009a565b5b600082015167ffffffffffffffff8111156200025d576200025c6200009f565b5b6200026b84828501620001f0565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002c757607f821691505b602082108103620002dd57620002dc6200027f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000308565b62000353868362000308565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a06200039a62000394846200036b565b62000375565b6200036b565b9050919050565b6000819050919050565b620003bc836200037f565b620003d4620003cb82620003a7565b84845462000315565b825550505050565b600090565b620003eb620003dc565b620003f8818484620003b1565b505050565b5b81811015620004205762000414600082620003e1565b600181019050620003fe565b5050565b601f8211156200046f576200043981620002e3565b6200044484620002f8565b8101602085101562000454578190505b6200046c6200046385620002f8565b830182620003fd565b50505b505050565b600082821c905092915050565b6000620004946000198460080262000474565b1980831691505092915050565b6000620004af838362000481565b9150826002028217905092915050565b620004ca8262000274565b67ffffffffffffffff811115620004e657620004e5620000bf565b5b620004f28254620002ae565b620004ff82828562000424565b600060209050601f83116001811462000537576000841562000522578287015190505b6200052e8582620004a1565b8655506200059e565b601f1984166200054786620002e3565b60005b8281101562000571578489015182556001820191506020850194506020810190506200054a565b868310156200059157848901516200058d601f89168262000481565b8355505b6001600288020188555050505b505050505050565b61136580620005b66000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806325db9a7214610067578063365b98b2146100835780637a99ea14146100b657806382678dd6146100d2578063b49fca5a146100f0578063ffe6a18e1461010c575b600080fd5b610081600480360381019061007c9190610b97565b61012a565b005b61009d60048036038101906100989190610bfa565b6102c9565b6040516100ad9493929190610d4c565b60405180910390f35b6100d060048036038101906100cb9190610ecd565b6103ae565b005b6100da610580565b6040516100e79190610f16565b60405180910390f35b61010a60048036038101906101059190610b97565b61062e565b005b61011461085a565b6040516101219190610f38565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101af576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060048060048111156101c5576101c4610cc6565b5b600260006101d285610aef565b815260200190815260200160002060020160009054906101000a900460ff16600481111561020357610202610cc6565b5b1461023a576040517f04396ef000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016002600061024986610aef565b815260200190815260200160002060020160006101000a81548160ff0219169083600481111561027c5761027b610cc6565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167f30fbe51cdb21b04c1c1ec29bf046a828313ab011b9c92008d972a3bb42a85d9760405160405180910390a2505050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461031290610f82565b80601f016020809104026020016040519081016040528092919081815260200182805461033e90610f82565b801561038b5780601f106103605761010080835404028352916020019161038b565b820191906000526020600020905b81548152906001019060200180831161036e57829003601f168201915b5050505050908060020160009054906101000a900460ff16908060030154905084565b3373ffffffffffffffffffffffffffffffffffffffff16600260006103d233610aef565b815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610451576040517f058176db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016001600481111561049257610491610cc6565b5b81526020016000815250600260006104a933610aef565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610513919061115f565b5060408201518160020160006101000a81548160ff0219169083600481111561053f5761053e610cc6565b5b0217905550606082015181600301559050507fdd99a09bdaea3e82f3c63badb4843aa0bd4da1c6fe510192f7a27d286e8d8e1c60405160405180910390a150565b60606002600061058f33610aef565b815260200190815260200160002060010180546105ab90610f82565b80601f01602080910402602001604051908101604052809291908181526020018280546105d790610f82565b80156106245780601f106105f957610100808354040283529160200191610624565b820191906000526020600020905b81548152906001019060200180831161060757829003601f168201915b5050505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b3576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060008060048111156106c9576106c8610cc6565b5b600260006106d685610aef565b815260200190815260200160002060020160009054906101000a900460ff16600481111561070757610706610cc6565b5b0361073e576040517f04396ef000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600480600481111561075457610753610cc6565b5b6002600061076185610aef565b815260200190815260200160002060020160009054906101000a900460ff16600481111561079257610791610cc6565b5b036107c9576040517f04396ef000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260006107d888610aef565b815260200190815260200160002060020160006101000a81548160ff0219169083600481111561080b5761080a610cc6565b5b02179055508473ffffffffffffffffffffffffffffffffffffffff167f30fbe51cdb21b04c1c1ec29bf046a828313ab011b9c92008d972a3bb42a85d9760405160405180910390a25050505050565b6000806002600061086a33610aef565b81526020019081526020016000206003015490506000600481111561089257610891610cc6565b5b6002600061089f33610aef565b815260200190815260200160002060020160009054906101000a900460ff1660048111156108d0576108cf610cc6565b5b036108da57600080fd5b600a81111561092f576004600260006108f233610aef565b815260200190815260200160002060020160006101000a81548160ff0219169083600481111561092557610924610cc6565b5b02179055506109de565b60028111156109845760036002600061094733610aef565b815260200190815260200160002060020160006101000a81548160ff0219169083600481111561097a57610979610cc6565b5b02179055506109dd565b600181036109d757600280600061099a33610aef565b815260200190815260200160002060020160006101000a81548160ff021916908360048111156109cd576109cc610cc6565b5b02179055506109dc565b600080fd5b5b5b6000600260006109ed33610aef565b815260200190815260200160002060020160009054906101000a900460ff16905060016004811115610a2257610a21610cc6565b5b816004811115610a3557610a34610cc6565b5b03610a44576000925050610aeb565b60026004811115610a5857610a57610cc6565b5b816004811115610a6b57610a6a610cc6565b5b03610a7a576001925050610aeb565b60036004811115610a8e57610a8d610cc6565b5b816004811115610aa157610aa0610cc6565b5b03610ab0576002925050610aeb565b600480811115610ac357610ac2610cc6565b5b816004811115610ad657610ad5610cc6565b5b03610ae5576003925050610aeb565b60049250505b5090565b6000816001604051602001610b05929190611307565b6040516020818303038152906040528051906020012060001c9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6482610b39565b9050919050565b610b7481610b59565b8114610b7f57600080fd5b50565b600081359050610b9181610b6b565b92915050565b600060208284031215610bad57610bac610b2f565b5b6000610bbb84828501610b82565b91505092915050565b6000819050919050565b610bd781610bc4565b8114610be257600080fd5b50565b600081359050610bf481610bce565b92915050565b600060208284031215610c1057610c0f610b2f565b5b6000610c1e84828501610be5565b91505092915050565b610c3081610b59565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c70578082015181840152602081019050610c55565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c9882610c36565b610ca28185610c41565b9350610cb2818560208601610c52565b610cbb81610c7c565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110610d0657610d05610cc6565b5b50565b6000819050610d1782610cf5565b919050565b6000610d2782610d09565b9050919050565b610d3781610d1c565b82525050565b610d4681610bc4565b82525050565b6000608082019050610d616000830187610c27565b8181036020830152610d738186610c8d565b9050610d826040830185610d2e565b610d8f6060830184610d3d565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610dda82610c7c565b810181811067ffffffffffffffff82111715610df957610df8610da2565b5b80604052505050565b6000610e0c610b25565b9050610e188282610dd1565b919050565b600067ffffffffffffffff821115610e3857610e37610da2565b5b610e4182610c7c565b9050602081019050919050565b82818337600083830152505050565b6000610e70610e6b84610e1d565b610e02565b905082815260208101848484011115610e8c57610e8b610d9d565b5b610e97848285610e4e565b509392505050565b600082601f830112610eb457610eb3610d98565b5b8135610ec4848260208601610e5d565b91505092915050565b600060208284031215610ee357610ee2610b2f565b5b600082013567ffffffffffffffff811115610f0157610f00610b34565b5b610f0d84828501610e9f565b91505092915050565b60006020820190508181036000830152610f308184610c8d565b905092915050565b6000602082019050610f4d6000830184610d3d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f9a57607f821691505b602082108103610fad57610fac610f53565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610fd8565b61101f8683610fd8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061105c61105761105284610bc4565b611037565b610bc4565b9050919050565b6000819050919050565b61107683611041565b61108a61108282611063565b848454610fe5565b825550505050565b600090565b61109f611092565b6110aa81848461106d565b505050565b5b818110156110ce576110c3600082611097565b6001810190506110b0565b5050565b601f821115611113576110e481610fb3565b6110ed84610fc8565b810160208510156110fc578190505b61111061110885610fc8565b8301826110af565b50505b505050565b600082821c905092915050565b600061113660001984600802611118565b1980831691505092915050565b600061114f8383611125565b9150826002028217905092915050565b61116882610c36565b67ffffffffffffffff81111561118157611180610da2565b5b61118b8254610f82565b6111968282856110d2565b600060209050601f8311600181146111c957600084156111b7578287015190505b6111c18582611143565b865550611229565b601f1984166111d786610fb3565b60005b828110156111ff578489015182556001820191506020850194506020810190506111da565b8683101561121c5784890151611218601f891682611125565b8355505b6001600288020188555050505b505050505050565b60008160601b9050919050565b600061124982611231565b9050919050565b600061125b8261123e565b9050919050565b61127361126e82610b59565b611250565b82525050565b600081905092915050565b6000815461129181610f82565b61129b8186611279565b945060018216600081146112b657600181146112cb576112fe565b60ff19831686528115158202860193506112fe565b6112d485610fb3565b60005b838110156112f6578154818901526001820191506020810190506112d7565b838801955050505b50505092915050565b60006113138285611262565b6014820191506113238284611284565b9150819050939250505056fea2646970667358221220ac9b6324f65b228d08bb4f6ea5bcecf64743ec5f6d004372aa91b1eafe75ddb164736f6c63430008120033";

type StoreUsersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StoreUsersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StoreUsers__factory extends ContractFactory {
  constructor(...args: StoreUsersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _salt: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StoreUsers> {
    return super.deploy(_salt, overrides || {}) as Promise<StoreUsers>;
  }
  override getDeployTransaction(
    _salt: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_salt, overrides || {});
  }
  override attach(address: string): StoreUsers {
    return super.attach(address) as StoreUsers;
  }
  override connect(signer: Signer): StoreUsers__factory {
    return super.connect(signer) as StoreUsers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StoreUsersInterface {
    return new utils.Interface(_abi) as StoreUsersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StoreUsers {
    return new Contract(address, _abi, signerOrProvider) as StoreUsers;
  }
}
